[roy@ICTool HW4]$ make
g++ -O1 -Wall -c main.cpp
In file included from main.cpp:12:0:
Node.h:23:9: error: expected unqualified-id before ‘<’ token
         <T> *_Node;
         ^
Node.h: In constructor ‘Node<T>::Node()’:
Node.h:35:5: error: ‘_Node’ was not declared in this scope
     _Node = NULL;
     ^
Node.h: In constructor ‘Node<T>::Node(unsigned int)’:
Node.h:41:9: error: ‘_Node’ was not declared in this scope
         _Node = NULL;
         ^
Node.h:43:9: error: ‘_Node’ was not declared in this scope
         _Node = new T [_length];
         ^
Node.h: In destructor ‘Node<T>::~Node()’:
Node.h:50:15: error: ‘_Node’ was not declared in this scope
     delete [] _Node; //check
               ^
Node.h: In member function ‘T* Node<T>::reCreate(unsigned int)’:
Node.h:57:9: error: ‘_Node’ was not declared in this scope
         _Node = NULL;
         ^
Node.h:59:9: error: ‘_Node’ was not declared in this scope
         _Node = new T [_length];
         ^
Node.h:63:12: error: ‘_Node’ was not declared in this scope
     return _Node;
            ^
Node.h: In member function ‘void Node<T>::set_Node(T*)’:
Node.h:68:5: error: ‘_Node’ was not declared in this scope
     _Node = Node;
     ^
Node.h: At global scope:
Node.h:71:1: error: expected unqualified-id before ‘<’ token                                                                                                              //用T即可，但忘記加template<class T>在member function上面
 <T>* Node<T>::get_Node() const{
 ^
In file included from main.cpp:13:0:
List.h:39:51: warning: friend declaration ‘std::ostream& operator<<(std::ostream&, List<T>)’ declares a non-template function [-Wnon-template-friend]
         friend ostream& operator<<(ostream &, List);
                                                   ^
List.h:39:51: note: (if this is not what you intended, make sure the function template has already been declared and add <> after the function name here)
List.h:40:53: warning: friend declaration ‘std::istream& operator>>(std::istream&, List<T>&)’ declares a non-template function [-Wnon-template-friend]
         friend istream& operator>>(istream &, List &);
                                                     ^
List.h: In constructor ‘List<T>::List()’:
List.h:45:17: error: class ‘List<T>’ does not have any field named ‘Node’
 List<T>::List():Node(){
                 ^
List.h: In constructor ‘List<T>::List(unsigned int)’:
List.h:50:37: error: class ‘List<T>’ does not have any field named ‘Node’
 List<T>::List(unsigned int _length):Node(_length){
                                     ^
List.h: At global scope:
List.h:74:10: error: ‘template<class T> class List’ used without template parameters
 List<T>& List::operator=(const List& other){
          ^
List.h:74:32: error: invalid use of template-name ‘List’ without an argument list
 List<T>& List::operator=(const List& other){
                                ^
List.h:74:38: error: ISO C++ forbids declaration of ‘other’ with no type [-fpermissive]
 List<T>& List::operator=(const List& other){
                                      ^
List.h:74:43: error: ‘List<T>& operator=(const int&)’ must be a nonstatic member function
 List<T>& List::operator=(const List& other){
                                           ^
List.h:134:1: error: invalid use of template-name ‘List’ without an argument list
 List List<T>::operator+(const List &other){
 ^
List.h:145:1: error: invalid use of template-name ‘List’ without an argument list
 List& List<T>::operator+=(const List &other){
 ^
List.h:155:1: error: invalid use of template-name ‘List’ without an argument list
 List List<T>::operator++(){
 ^
List.h:164:1: error: invalid use of template-name ‘List’ without an argument list
 List List<T>::operator++(int){
 ^
List.h:173:1: error: invalid use of template-name ‘List’ without an argument list
 List List<T>::operator--(){
 ^
List.h:182:1: error: invalid use of template-name ‘List’ without an argument list
 List List<T>::operator--(int){
 ^
List.h:191:35: error: ‘List’ is not a type
 ostream& operator<<(ostream &out, List list){
                                   ^
List.h: In function ‘std::ostream& operator<<(std::ostream&, int)’:
List.h:192:33: error: request for member ‘getLength’ in ‘list’, which is of non-class type ‘int’
     for(int i =0; i < (int)list.getLength(); i++){
                                 ^
List.h:193:22: error: request for member ‘get_Node’ in ‘list’, which is of non-class type ‘int’
         out << (list.get_Node())[i] << " ";
                      ^
List.h: At global scope:
List.h:199:34: error: ‘List’ is not a type
 istream& operator>>(istream &in, List &list){  //check
                                  ^
List.h: In function ‘std::istream& operator>>(std::istream&, int&)’:
List.h:203:9: error: ‘inList’ was not declared in this scope
         inList.setLength(val);
         ^
List.h:206:9: error: ‘inList’ was not declared in this scope
         inList.setElement(count - 1, val);
         ^
List.h: At global scope:
List.h:214:30: error: invalid use of template-name ‘List’ without an argument list
 inline bool operator==(const List &other){
                              ^
List.h:214:36: error: ISO C++ forbids declaration of ‘other’ with no type [-fpermissive]
 inline bool operator==(const List &other){
                                    ^
List.h:214:41: error: ‘bool operator==(const int&)’ must have an argument of class or enumerated type
 inline bool operator==(const List &other){
                                         ^
main.cpp: In function ‘int main(int, char**)’:
main.cpp:38:46: error: ‘inList’ was not declared in this scope
         cout << "Input Element number = " << inList.getLength() << endl;
                                              ^
main.cpp:53:46: error: ‘inList’ was not declared in this scope
         cout << "Input Element number = " << inList.getLength() << endl;
                                              ^
main.cpp:67:18: error: no match for call to ‘(List<double>) (List<double>&)’
     list1(inList1);
                  ^
main.cpp:75:46: error: no match for ‘operator==’ (operand types are ‘List<std::basic_string<char> >’ and ‘List<double>’)
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                              ^
main.cpp:75:46: note: candidates are:
In file included from main.cpp:13:0:
List.h:41:21: note: bool List<T>::operator==(const List<T>&) [with T = std::basic_string<char>]
         inline bool operator==(const List & other);
                     ^
List.h:41:21: note:   no known conversion for argument 1 from ‘List<double>’ to ‘const List<std::basic_string<char> >&’
In file included from /usr/include/c++/4.8.2/iosfwd:40:0,
                 from /usr/include/c++/4.8.2/ios:38,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/bits/postypes.h:216:5: note: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)
     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
     ^
/usr/include/c++/4.8.2/bits/postypes.h:216:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   ‘List<std::basic_string<char> >’ is not derived from ‘const std::fpos<_StateT>’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
In file included from /usr/include/c++/4.8.2/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/4.8.2/bits/char_traits.h:39,
                 from /usr/include/c++/4.8.2/ios:40,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/bits/stl_pair.h:214:5: note: template<class _T1, class _T2> bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)
     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
     ^
/usr/include/c++/4.8.2/bits/stl_pair.h:214:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   ‘List<std::basic_string<char> >’ is not derived from ‘const std::pair<_T1, _T2>’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
In file included from /usr/include/c++/4.8.2/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/4.8.2/bits/char_traits.h:39,
                 from /usr/include/c++/4.8.2/ios:40,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/bits/stl_iterator.h:291:5: note: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)
     operator==(const reverse_iterator<_Iterator>& __x,
     ^
/usr/include/c++/4.8.2/bits/stl_iterator.h:291:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   ‘List<std::basic_string<char> >’ is not derived from ‘const std::reverse_iterator<_Iterator>’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
In file included from /usr/include/c++/4.8.2/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/4.8.2/bits/char_traits.h:39,
                 from /usr/include/c++/4.8.2/ios:40,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/bits/stl_iterator.h:341:5: note: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)
     operator==(const reverse_iterator<_IteratorL>& __x,
     ^
/usr/include/c++/4.8.2/bits/stl_iterator.h:341:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   ‘List<std::basic_string<char> >’ is not derived from ‘const std::reverse_iterator<_Iterator>’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
In file included from /usr/include/c++/4.8.2/string:41:0,
                 from /usr/include/c++/4.8.2/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8.2/bits/ios_base.h:41,
                 from /usr/include/c++/4.8.2/ios:42,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/bits/allocator.h:128:5: note: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)
     operator==(const allocator<_T1>&, const allocator<_T2>&)
     ^
/usr/include/c++/4.8.2/bits/allocator.h:128:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   ‘List<std::basic_string<char> >’ is not derived from ‘const std::allocator<_CharT>’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
In file included from /usr/include/c++/4.8.2/string:41:0,
                 from /usr/include/c++/4.8.2/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8.2/bits/ios_base.h:41,
                 from /usr/include/c++/4.8.2/ios:42,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/bits/allocator.h:133:5: note: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)
     operator==(const allocator<_Tp>&, const allocator<_Tp>&)
     ^
/usr/include/c++/4.8.2/bits/allocator.h:133:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   ‘List<std::basic_string<char> >’ is not derived from ‘const std::allocator<_CharT>’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
In file included from /usr/include/c++/4.8.2/string:52:0,
                 from /usr/include/c++/4.8.2/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8.2/bits/ios_base.h:41,
                 from /usr/include/c++/4.8.2/ios:42,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/bits/basic_string.h:2486:5: note: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/4.8.2/bits/basic_string.h:2486:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   ‘List<std::basic_string<char> >’ is not derived from ‘const std::basic_string<_CharT, _Traits, _Alloc>’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
In file included from /usr/include/c++/4.8.2/string:52:0,
                 from /usr/include/c++/4.8.2/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8.2/bits/ios_base.h:41,
                 from /usr/include/c++/4.8.2/ios:42,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/bits/basic_string.h:2493:5: note: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&)
     operator==(const basic_string<_CharT>& __lhs,
     ^
/usr/include/c++/4.8.2/bits/basic_string.h:2493:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   ‘List<std::basic_string<char> >’ is not derived from ‘const std::basic_string<_CharT>’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
In file included from /usr/include/c++/4.8.2/string:52:0,
                 from /usr/include/c++/4.8.2/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8.2/bits/ios_base.h:41,
                 from /usr/include/c++/4.8.2/ios:42,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/bits/basic_string.h:2507:5: note: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator==(const _CharT* __lhs,
     ^
/usr/include/c++/4.8.2/bits/basic_string.h:2507:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   mismatched types ‘const _CharT*’ and ‘List<std::basic_string<char> >’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
In file included from /usr/include/c++/4.8.2/string:52:0,
                 from /usr/include/c++/4.8.2/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8.2/bits/ios_base.h:41,
                 from /usr/include/c++/4.8.2/ios:42,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/bits/basic_string.h:2519:5: note: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
/usr/include/c++/4.8.2/bits/basic_string.h:2519:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   ‘List<std::basic_string<char> >’ is not derived from ‘const std::basic_string<_CharT, _Traits, _Alloc>’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
In file included from /usr/include/c++/4.8.2/bits/locale_facets.h:48:0,
                 from /usr/include/c++/4.8.2/bits/basic_ios.h:37,
                 from /usr/include/c++/4.8.2/ios:44,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/bits/streambuf_iterator.h:204:5: note: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)
     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
     ^
/usr/include/c++/4.8.2/bits/streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   ‘List<std::basic_string<char> >’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
In file included from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.8.2/bits/allocator.h:46,
                 from /usr/include/c++/4.8.2/string:41,
                 from /usr/include/c++/4.8.2/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8.2/bits/ios_base.h:41,
                 from /usr/include/c++/4.8.2/ios:42,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/ext/new_allocator.h:139:5: note: template<class _Tp> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<_Tp>&, const __gnu_cxx::new_allocator<_Tp>&)
     operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
     ^
/usr/include/c++/4.8.2/ext/new_allocator.h:139:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   ‘List<std::basic_string<char> >’ is not derived from ‘const __gnu_cxx::new_allocator<_Tp>’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
In file included from /usr/include/c++/4.8.2/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/4.8.2/bits/char_traits.h:39,
                 from /usr/include/c++/4.8.2/ios:40,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/bits/stl_iterator.h:811:5: note: template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)
     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
     ^
/usr/include/c++/4.8.2/bits/stl_iterator.h:811:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   ‘List<std::basic_string<char> >’ is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
In file included from /usr/include/c++/4.8.2/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/4.8.2/bits/char_traits.h:39,
                 from /usr/include/c++/4.8.2/ios:40,
                 from /usr/include/c++/4.8.2/ostream:38,
                 from /usr/include/c++/4.8.2/iostream:39,
                 from main.cpp:10:
/usr/include/c++/4.8.2/bits/stl_iterator.h:805:5: note: template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)
     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
     ^
/usr/include/c++/4.8.2/bits/stl_iterator.h:805:5: note:   template argument deduction/substitution failed:
main.cpp:75:49: note:   ‘List<std::basic_string<char> >’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’
     cout << "Is list2 == list3 ? " << (list3 == list2) << endl;
                                                 ^
main.cpp:84:33: error: no matching function for call to ‘List<double>::setElement(int, const char [5])’
     inList1.setElement(0, "7.77");
                                 ^
main.cpp:84:33: note: candidate is:
In file included from main.cpp:13:0:
List.h:110:5: note: int List<T>::setElement(unsigned int, T) [with T = double]
 int List<T>::setElement(unsigned int pos, T val){
     ^
List.h:110:5: note:   no known conversion for argument 2 from ‘const char [5]’ to ‘double’
main.cpp:85:45: error: no matching function for call to ‘List<double>::setElement(unsigned int, const char [5])’
     inList1.setElement(boundary2 - 1, "6.77");
                                             ^
main.cpp:85:45: note: candidate is:
In file included from main.cpp:13:0:
List.h:110:5: note: int List<T>::setElement(unsigned int, T) [with T = double]
 int List<T>::setElement(unsigned int pos, T val){
     ^
List.h:110:5: note:   no known conversion for argument 2 from ‘const char [5]’ to ‘double’
main.cpp:86:42: error: no matching function for call to ‘List<double>::setElement(unsigned int&, const char [6])’
     inList1.setElement(boundary2, "7.777");
                                          ^
main.cpp:86:42: note: candidate is:
In file included from main.cpp:13:0:
List.h:110:5: note: int List<T>::setElement(unsigned int, T) [with T = double]
 int List<T>::setElement(unsigned int pos, T val){
     ^
List.h:110:5: note:   no known conversion for argument 2 from ‘const char [6]’ to ‘double’
main.cpp:91:11: error: no match for ‘operator=’ (operand types are ‘List<std::basic_string<char> >’ and ‘List<double>’)
     list3 = --list1;
           ^
main.cpp:91:11: note: candidate is:
In file included from main.cpp:13:0:
List.h:28:15: note: List<T>& List<T>::operator=(const List<T>&) [with T = std::basic_string<char>]
         List& operator=(const List& other);
               ^
List.h:28:15: note:   no known conversion for argument 1 from ‘List<double>’ to ‘const List<std::basic_string<char> >&’
main.cpp:92:9: error: ‘oFile’ was not declared in this scope
     if(!oFile.is_open()){
         ^
main.cpp:101:5: error: ‘oFile’ was not declared in this scope
     oFile.close();
     ^
In file included from main.cpp:13:0:
List.h: At global scope:
List.h:41:21: warning: inline function ‘bool List<T>::operator==(const List<T>&) [with T = double]’ used but never defined [enabled by default]
         inline bool operator==(const List & other);
                     ^
